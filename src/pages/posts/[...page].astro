---
import type { GetStaticPathsOptions } from 'astro'
import BaseHead from '~/components/BaseHead.astro'
import BaseScript from '~/components/BaseScript.astro'
import Header from '~/components/Header.astro'
import Footer from '~/components/Footer.astro'
import { siteConfig } from '~/config'
import { CollectionEntry, getCollection } from 'astro:content'
import createSlug from '~/lib/createSlug'
import slugDate from '~/lib/slugDate'

interface Props {
  posts: CollectionEntry<'blog'>
}

const TwitterLink = `https://twitter.com/${siteConfig.author.contacts.twitter}`
const GithubLink = `https://github.com/${siteConfig.author.contacts.github}`
const MastodonLink = `https://${siteConfig.author.contacts.mastodon_url}`

const { page, posts } = Astro.props

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts = (await getCollection('blog')).sort(
    (a, b) =>
      Math.floor(new Date(b.data.date).getTime() / 1000) -
      Math.floor(new Date(a.data.date).getTime() / 1000)
  )
  return paginate(posts, { pageSize: siteConfig.postsPerPage })
}
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={siteConfig.title} description={siteConfig.description} />
    <BaseScript />
  </head>
  <body>
    <Header />
    <section class="top-banner">
      <div class="relative overflow-hidden topbanner-body">
        <div
          class="topbanner-bg absolute top-0 right-0 bottom-0 left-0 w-full h-full overflow-hidden bg-fixed"
        >
          <div class="flex justify-center items-center h-full">
            <div class="text-center text-white px-6 md:px-12">
              <h1
                class="uppercase text-5xl md:text-6xl font-bold tracking-tight"
              >
                {siteConfig.title}
              </h1>
              <h2 class="uppercase text-xl font-normal tracking-tight mt-none">
                {siteConfig.subtitle}
              </h2>
              <p class="social-blocks">
                <a
                  href={TwitterLink}
                  target="_blank"
                  aria-label="go to twitter"
                  rel="noopener noreferrer"
                >
                  <i class="fa fa-twitter"></i>
                </a>
                <a
                  href={GithubLink}
                  target="_blank"
                  aria-label="go to github"
                  rel="noopener noreferrer"
                >
                  <i class="fa fa-github"></i>
                </a>
                <a
                  href={MastodonLink}
                  target="_blank"
                  aria-label="go to mastodon"
                  rel="noopener noreferrer"
                >
                  <i class="fa fa-mastodon"></i>
                </a>
              </p>
            </div>
          </div>
        </div>
      </div>
    </section>
    <main class="w-full max-w-4xl">
      <section>
        <ul class="list-none mb-6">
          {
            page.data.map((post: typeof posts) => (
              <li>
                <a
                  class="inline-block"
                  href={`/${slugDate(post.data.date.toISOString())}${createSlug(
                    post.data.title
                  )}/`}
                >
                  <h3 class="font-normal mb-2 mt-6">{post.data.title}</h3>
                </a>
                <div class="flex items-center space-x-2 uppercase">
                  <time datetime={post.data.date.toISOString()}>
                    {post.data.date.toLocaleDateString('en-gb', {
                      day: 'numeric',
                      month: 'long',
                      year: 'numeric',
                    })}
                  </time>
                </div>
              </li>
            ))
          }
        </ul>
        <div class="pagination flex justify-center px-3 py-6">
          {
            (page.url.prev || page.url.next) && (
              <nav class="flex items-center gap-x-8">
                {page.url.prev ? (
                  <a
                    href={page.url.prev}
                    class="mr-auto py-2 sm:hover:text-accent"
                  >
                    Previous
                  </a>
                ) : null}
                {page.url.next ? (
                  <a
                    href={page.url.next}
                    class="mr-auto py-2 sm:hover:text-accent"
                  >
                    Next
                  </a>
                ) : null}
              </nav>
            )
          }
        </div>
      </section>
    </main>
    <Footer />
  </body>
</html>
